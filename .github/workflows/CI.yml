on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'           # Push events to every tag not containing /
  workflow_dispatch:

name: Publish

jobs:
  check-versions:
    name: Check all versions match
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install ripgrep
        run: sudo apt-get install ripgrep
      - run: rg --hidden --no-filename --no-line-number --multiline -o 'name = "filesfinder"\nversion = "(.*)"' -Tmd
      - name: Find versions in Cargo
        run: rg --hidden --no-filename --no-line-number --multiline -o 'name = "filesfinder"\nversion = "(.*)"' -Tmd -r 'v$1' >> versions.txt
      - name: Find versions elsewhere
        run: rg --hidden --no-filename --no-line-number "^.filesfinder[:@](v.*)" -Tmd -r '$1' >> versions.txt
      - name: Compare versions
        run: cat versions.txt | xargs -I {} bash -c 'if [ "{}" == "${{ env.RELEASE_VERSION }}" ]; then echo "versions match"; else echo "version mismatch" && exit 1; fi'
  publish-crate:
    name: Publish binaries on crate.io
    runs-on: ubuntu-latest
    needs: check-versions
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
  publish-docker:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: publish-crate
    defaults:
      run:
        working-directory: ./docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        run: docker build --target=build -t filesfinder-build .
      - name: Tag
        run: |
          echo 'DOCKER_TAG<<EOF' >> $GITHUB_ENV
          echo $(echo ${{ github.ref }} | grep -oP '(?<=refs/tags/v).*') >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_ACCESSTOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin     
      - name: Push to Docker Hub
        run: |
          docker buildx build --push \
            --tag $DOCKERHUB_REPOSITORY:$DOCKER_TAG \
            --tag $DOCKERHUB_REPOSITORY:latest \
            --platform linux/amd64,linux/arm64 .
        env:
          DOCKERHUB_REPOSITORY: jeertmans/filesfinder

